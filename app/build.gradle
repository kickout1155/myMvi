plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'

}

android {
    compileSdk 32
    buildFeatures {
        viewBinding true
    }
    defaultConfig {
        applicationId "ru.zenin.delivery"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation "com.google.dagger:hilt-android:$hilt_ver"
    kapt "com.google.dagger:hilt-compiler:$hilt_ver"
    annotationProcessor "com.google.dagger:hilt-compiler:$hilt_ver"


    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.5.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    def serializationVersion = "1.0.1"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$serializationVersion"

    def coroutines_version = "1.5.2"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"

    def fragment_version = "1.5.0"
    implementation "androidx.fragment:fragment-ktx:$fragment_version"

    def androidxLifecycle = "2.5.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$androidxLifecycle"

    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    def hilt_version = "2.38.1"
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    def data_store_version = "1.0.0"
    implementation "androidx.datastore:datastore:$data_store_version"
    implementation "androidx.datastore:datastore-core:$data_store_version"
    implementation "androidx.datastore:datastore-preferences:$data_store_version"
    implementation "androidx.datastore:datastore-preferences-core:$data_store_version"

    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    def glide_version = "4.12.0"
    implementation "com.github.bumptech.glide:glide:$glide_version"

    def timberVersion = "4.7.1"
    implementation "com.jakewharton.timber:timber:$timberVersion"

    def latestFastAdapterRelease = "5.5.1"
    implementation "com.mikepenz:fastadapter:$latestFastAdapterRelease"
    implementation "com.mikepenz:fastadapter-extensions-expandable:$latestFastAdapterRelease"
    implementation "com.mikepenz:fastadapter-extensions-binding:$latestFastAdapterRelease"
    implementation "com.mikepenz:fastadapter-extensions-diff:$latestFastAdapterRelease" // diff util helpers
    implementation "com.mikepenz:fastadapter-extensions-drag:$latestFastAdapterRelease" // drag support
    implementation "com.mikepenz:fastadapter-extensions-paged:$latestFastAdapterRelease" // paging support
    implementation "com.mikepenz:fastadapter-extensions-scroll:$latestFastAdapterRelease" // scroll helpers
    implementation "com.mikepenz:fastadapter-extensions-swipe:$latestFastAdapterRelease" // swipe support
    implementation "com.mikepenz:fastadapter-extensions-ui:$latestFastAdapterRelease" // pre-defined ui components
    implementation "com.mikepenz:fastadapter-extensions-utils:$latestFastAdapterRelease" // needs the `expandable`, `drag` and `scroll` extension.

    implementation(project(":mvicore"))

}
